volumes:
  redpanda: null
services:
  redpanda:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.6
    container_name: redpanda
    volumes:
      - redpanda:/var/lib/redpanda/data
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    healthcheck:
      test:
        ["CMD-SHELL", "rpk topic list --brokers=localhost:9092 >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 10

  topics-creator:
    entrypoint: /bin/sh
    command: -c 'for topic in snowplow-enriched-good shopper-discounts; do rpk topic create $$topic --brokers=redpanda:9092; done'
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.6
    container_name: redpanda-topics-creator
    depends_on:
      redpanda:
        condition: service_healthy

  console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.8.3
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda

  discounts-processor:
    container_name: redpanda-discounts-processor
    image: docker.redpanda.com/redpandadata/connect
    depends_on:
      - redpanda
    entrypoint: /bin/sh
    #command: -c 'echo "$$CONNECT_CFG_FILE" > /tmp/connect.yaml; while true; do sleep 10; echo working ...; done'
    command: -c 'echo "$$CONNECT_CFG_FILE" > /tmp/connect.yaml; /redpanda-connect -c /tmp/connect.yaml'
    restart: unless-stopped
    environment:
      CONNECT_CFG_FILE: |
        input:
          kafka:
            addresses: ["redpanda:9092"]
            topics: ["snowplow-enriched-good"]
            consumer_group: "discounts-processor"
        pipeline:
          processors:
            - mapping: |
                root = {
                  "schema": "iglu:com.snowplow/shopper_discount_applied/jsonschema/1-0-0",
                  "data": {
                    "shopper_id": this.user_id,
                    "product_id": this.product_id,
                    "discount": 0.1
                  }
                }
        output:
          kafka:
            addresses: ["redpanda:9092"]
            topic: "shopper-discounts"
            max_in_flight: 1
            key: $${! this.data.shopper_id }
